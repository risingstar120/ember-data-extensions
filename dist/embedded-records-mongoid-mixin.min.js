!function(e,t){function i(e){return e&&("always"===e.embedded||"load"===e.embedded)}function r(e,t){var i=e+"_id";t.hasOwnProperty(i)&&delete t[i]}function a(e,t,r,a){var l=y(this,"attrs");l&&t.eachRelationship(function(t,y){var o=l[t];i(o)&&("hasMany"===y.kind&&n.call(this,e,t,y,r,a),"belongsTo"===y.kind&&s.call(this,e,t,y,r,a))},this)}function n(t,i,r,n,s){var o=t.serializerFor(r.type.typeKey),u=y(this,"primaryKey"),p="_"+e.String.pluralize(r.type.typeKey),h=this.keyForRelationship(i,r.kind),d=this.keyForAttribute(i),c=[];s[d]&&(n[p]=n[p]||[],l(s[d],function(e){var i=t.modelFor(r.type.typeKey);a.call(o,t,i,n,e),c.push(e[u]),n[p].push(e)}),s[h]=c,delete s[d])}function s(t,r,a,n,s){var l=this.get("attrs");if(l&&(i(l[e.String.camelize(r)])||i(l[r]))){var o=t.serializerFor(a.type.typeKey),u=(y(o,"primaryKey"),e.String.pluralize(a.type.typeKey)),p=o.keyForRelationship(r,a.kind),h=o.keyForAttribute(r);if(s[h]){n[u]=n[u]||[];{t.modelFor(a.type.typeKey)}s[p]=s[h].id,n[u].push(s[h]),s[h][a.parentType.typeKey+"_id"]=s.id,delete s[h]}}}var y=e.get,l=e.EnumerableUtils.forEach;t.EmbeddedRecordsMongoidMixin=e.Mixin.create({serializeBelongsTo:function(e,t,a){var n=a.key,s=this.get("attrs");if(!s||!i(s[n]))return this._super(e,t,a),void 0;var y=this.keyForAttribute(n),l=e.get(n);if(l){t[y]=l.serialize();var o=l.get("id");o&&(t[y].id=o);var u=this.keyForAttribute(a.parentType.typeKey);u&&r(u,t[y]),delete t[y][u]}else t[y]=null},serializeHasMany:function(e,t,r){var a=r.key,n=this.get("attrs");if(!n||!i(n[a]))return this._super(e,t,r),void 0;var s=this.keyForAttribute(a);t[s]=y(e,a).map(function(e){var t=e.serialize(),i=y(this,"primaryKey");return t[i]=y(e,i),null===t.id&&delete t.id,t},this)},extractSingle:function(e,t,i,r,n){var s=this.keyForAttribute(t.typeKey),y=i[s];return a.call(this,e,t,i,y),this._super(e,t,i,r,n)},extractArray:function(t,i,r){var n=this.keyForAttribute(i.typeKey),s=r[e.String.pluralize(n)];return l(s,function(e){a.call(this,t,i,r,e)},this),this._super(t,i,r)}})}(Ember,DS);